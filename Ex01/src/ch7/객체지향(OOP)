객체지향

상속(inheritance) is ~ a
정의 : 기존 클래스를 재사용하여 새로운 클래스 작성
	(1) 코드의 재사용성 증가
	(2) 코드의 중복제거
	(3) 프로그램 생산성 증가, 유지보수 기여

"extends"의 사용

class Parent {
}

class child extends Parent {
}
해석 : Parents를 확장한 child

자손클래스는 부모클래스의 모든 멤버를 상속받는다.
= 하위클래스는 상위클래스의 모든 권한을 상속받는다.

특징
1. 자손클래스는 부모클래스의 모든 멤버를 상속받는다.
2. 자손클래스의 변경은 조상클래스에 영향을 미치지 않는다.


포함관계 has ~a
클래스 간에 포함관계를 맺어준다.
=> 한 클래스의 멤버변수로 다른 클래스의 참조변수를 선언한다.

class Point {
	int x;
	int y;
}

class Circle {
	point c = new Point();
	int r;
}

상속관계와 포함관계
상속관계(is a) : '~는 ~이다'
포함관계(has a) : '~는 ~를 가지고 있다.'
=> 대체로 상속관계보다 포함관계가 많음

단일상속